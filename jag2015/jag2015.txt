JAG 2015 Spring
http://acm-icpc.aitea.net/index.php?2014%2FPractice%2F%E6%98%A5%E3%82%B3%E3%83%B3%E3%83%86%E3%82%B9%E3%83%88%2F%E8%AC%9B%E8%A9%95

http://jag2015spring.contest.atcoder.jp/assignments


 A.
树分治 or 启发式合并。。（显然后者比较好写 

B.
背包。。朴素的状态会 TLE。。。
状态要写成。。。
 dp[i][j][s]。。表示
// [i, k) 必选
// [j, n) 必不选
能否凑成 s
从 i = 0, j = k 推到 i = k, j = n。。。
最后单调队列。。。

。。。菜鸡表示从未见过这种方法。。。 


C.
。。神题啊。。。。
我还没有完全搞懂最后一步。.。。
http://jag2015spring.contest.atcoder.jp/submissions/495157

D.
树背包（？
灵性 dfs。。。（http://jag2015spring.contest.atcoder.jp/submissions/389753 

递归回来的时候只将当前向下最长的路径增加上这条边的长度。。
 
E.
给定一副费用流网络。
找到一个流 f
。。最小化 B(f) = C(f)^2 ＋ (MaxFlow - F(f))^2
C(f): 费用函数 
F(f)：流量函数。
――――――
spfa 出最小费用最大流的同时，得到最小费用随着流变化的函数。（分段线性。
分析 B(f)。。
。。那么 B(f) 要么在这些端点上，要么在某段中间导数等于 0 的位置。



F.
卧槽。。。。居然不会 。。。真是菜鸡。。

1. 先考虑没有限制的。。（考虑每种方案对应多少排列。。
2. 考虑只有好友关系的。
3. 最后考虑敌人关系。。。
然后小学生容斥就行了。。。 


I.
一般情况。。。固定 A 上的点，此时与 B 的中点形成的直线在一条直线上。
因而唯一退化的是该直线与 C 重合的情况。
此时可以 FFT。



K.
？？？
显然要往圆心走。。走到某个圆以内就 safe 了。。。
于是可以想到有两种方案。。
1. 沿着径向走，最快的到达 safe 区域。
2. 沿着切向走，速度稍微慢点，但是可以拖延对手的时间。

简单画图，利用三角不等式可以发现 2 比1 要优。
 
L.
博弈 DP。。
类似的题目似乎出锅很多次了。。
 



